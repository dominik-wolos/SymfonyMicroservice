parameters:
    api_route: "/api"
    api_registration_route: "^%api_route%/register"
    #exclude registration route from api endpoints
    api_endpoints_regex: "^%api_route%/(?!register).*$"

security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_player_provider:
            entity:
                class: App\Components\Player\Entity\Player
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        register:
            pattern: "%api_registration_route%"
            stateless: true
            security: false

        api:
            pattern: "%api_endpoints_regex%"
            provider: app_player_provider
            stateless: true
            json_login:
                check_path: "auth"
                login_path: "auth"
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            custom_authenticators:
                - app.authenticator

        main:
            stateless: true
            provider: app_player_provider
            json_login:
                check_path: auth # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: "%api_route%", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%api_registration_route%", roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%api_endpoints_regex%", roles: ROLE_USER }
#lexik_jwt_authentication.security.jwt_authenticator
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
